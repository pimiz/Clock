<!DOCTYPE html>

<meta charset="utf-8" />

<title>WebSocket Test</title>

<script language="javascript" type="text/javascript">

  var wsUri = 'ws://127.0.0.1:9999';
  var input;
  var output; 
	var timeOutput;

  function init()
  {
    output = document.getElementById("output");
		timeOutput = document.getElementById("timeOutput");
    input = document.getElementById("input");
    testWebSocket();
  }

  function testWebSocket()
  {
    websocket = new WebSocket(wsUri, 'my-protocol');
    websocket.onopen = function(evt) { onOpen(evt) };
    websocket.onclose = function(evt) { onClose(evt) };
    websocket.onmessage = function(evt) { onMessage(evt) };
    websocket.onerror = function(evt) { onError(evt) };
  }

  function onOpen(evt)
  {
    writeToScreen("CONNECTED");
    //doSend("WebSocketRocks");
  }

  function onClose(evt)
  {
    writeToScreen("DISCONNECTED");
  }

  function onMessage(evt)
  {
    writeToScreen('<span style="color: blue;">RESPONSE: ' + evt.data+'</span>');
		
		var time = convertTimeFromMinutes(parseInt(evt.data, 10));	

		if (isNaN(parseInt(time[0], 10)) ||Â isNaN(parseInt(time[1], 10)))
		{
			writeToScreen("Error:" + hours + ":" + minutes);
		}

		writeCurrentTime(time[0], time[1]);

//    websocket.close();
  }

  function onError(evt)
  {
    writeToScreen('<span style="color: red;">ERROR:</span> ' + evt.data);
		websocket.close();
  }

  function sendToWebSocket(message)
  {
    writeToScreen("SENT: " + message); 
    websocket.send(message);
  }

  function writeToScreen(message)
  {
    var pre = document.createElement("p");
    pre.style.wordWrap = "break-word";
    pre.innerHTML = message;
    output.appendChild(pre);
  }

	function pad(n, width, z) 
	{
   	z = z || '0';
  		n = n + '';
  		return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;
	}

  function setNewTimeTo3DClock()
  {
	if (isNaN(inputHours.value))
	{
		// todo do something
		return;
	}
	if (isNaN(inputMinutes.value))
	{
		// todo do something
		return;
	}
	var payload = 1 + pad(parseInt(inputHours.value), 2) + pad(parseInt(inputMinutes.value), 2);

	sendToWebSocket(payload);
  }

	function requestCurrentTimeFrom3DClock()
	{
		var msg = "x";
		sendToWebSocket(msg);
	}

	// Convert time from minutes past midnight to 24 hour format
	function convertTimeFromMinutes(minutesPastMidnight)
	{
		var minutes = minutesPastMidnight % 60;
		var hours = (minutesPastMidnight-minutes) / 60;
		return [hours, minutes];
	}

	function writeCurrentTime(hours, minutes)
	{
alert('write');
		var pre = document.createElement("p");
   	pre.style.wordWrap = "break-word";
   	pre.innerHTML = pad(hours, 2) + ":" + pad(minutes, 2);
   	timeOutput.appendChild(pre);
	}



  window.addEventListener("load", init, false);

	websocket.onmessage = onMessage();

</script>

<h2>WebSocket Test</h2>


<table border="1">
	<tr>
		<td>
			<h3>Set time:</h3>
			<form>
			Hours
			<input type="text" id="inputHours" size="2" />
			Minutes
			<input type="text" id="inputMinutes" size="2" />
			<input type="button" name="setButton" value="set" onClick="setNewTimeTo3DClock()" />
			</form>
		</td>
		<td>
			<h3>Current time:</h3>
			<form>			
			<input type="button" name="requestButton" value="request" onClick="requestCurrentTimeFrom3DClock()" />
			<div id="timeOutput"></div>
			</form>
		</td>
	</tr>
</table>

<div id="output"></div>
